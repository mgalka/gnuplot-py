This is to announce the release of version 1.2 of Gnuplot.py.

Gnuplot.py is a Python [1] module that allows you to create graphs
from within Python using the gnuplot [2] plotting package.  This
version mainly adds support for MS Windows and for sending data to
gnuplot as inline data and in binary format.

Gnuplot.py can be obtained from

    http://monsoon.harvard.edu/~mhagger/Gnuplot/Gnuplot.html

Prerequisites (see footnotes):
    the Python interpreter [1]
    the Python Numeric module [3]
    the gnuplot program [2]

Some ways this package can be used:

1. Interactive data processing: Use Python's excellent Numeric package
   to create and manipulate arrays of numbers, and use Gnuplot.py to
   visualize the results.
2. Web graphics: write CGI scripts in Python that use gnuplot to
   output plots in GIF format and return them to the client.
3. Glue for numerical applications (this is my favorite): wrap your
   C++/C/Fortran subroutines so that they are callable from Python,
   then you can perform numerical computations interactively from
   scripts or from the command line and use Gnuplot.py to plot the
   output on the fly.
4. Compute a series of datasets in Python and plot them one after the
   other using Gnuplot.py to produce a crude animation.

Features added in version 1.2:

  +  Support for MS Windows, using the `pgnuplot.exe' program.
     Thanks go especially to Craig Schardt for help with this.
  +  Support for sending data to gnuplot as `inline data' (i.e.,
     "plot '-'").  This method should be faster than the older method,
     temporary files (which are also still supported).
  +  Support for using binary files to send grid data to gnuplot.
     This saves a lot of time and usually saves space compared with
     text files.  However, gnuplot only supports binary data for grid
     data used by the splot command.
  +  Allows PlotItem options to be modified after the PlotItem is
     constructed.
  +  Simplified the PlotItem inheritance hierarchy.
  +  Added several configuration options to aid porting (see top of
     Gnuplot.py).
  +  Separated function-based interface into a separate file
     (Gnuplot_plot.py).
  +  Added a test module, Gnuplot_test.py, which tests most of the
     features of Gnuplot.py.
  +  A README file, lots of documentation changes, etc.

Features already present in older versions:

  +  Two and three-dimensional plots.
  +  Plot data from memory, from a file, or from an expression.
  +  Support for multiple simultaneous gnuplot sessions.
  +  Can pass arbitrary commands to the gnuplot program.
  +  Object oriented, extensible design with several built-in types
     of plot items.
  +  Portable and easy to install (nothing to compile except on
     Windows).

Footnotes:
----------
[1] Python <http://www.python.org> is an excellent object-oriented
    scripting/rapid development language that is also especially good
    at gluing programs together.
[2] gnuplot <ftp://ftp.gnuplot.vt.edu/pub/gnuplot/> is a free,
    popular, very portable plotting program with a command-line
    interface.  It can make 2-d and 3-d plots and can output to myriad
    printers.
[3] The Numeric Python extension
    <ftp://ftp-icf.llnl.gov/pub/python/README.html> is a Python module
    that adds fast and convenient array manipulations to the Python
    language.

Yours,
Michael

